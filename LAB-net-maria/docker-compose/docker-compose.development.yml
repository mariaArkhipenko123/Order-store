services:
  # ASP.NET Core API
  m-arkhipenka-api:
    ports:
      - "5000:${APP_PORT}" 

  # PostgreSQL
  postgres:
    image: postgres:alpine
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}  
      POSTGRES_DB: m-arkhipenka-postgres
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"
    ports:
      - "5432:5432"
    networks:
      - dotnet-lab-network

  # MongoDB
  mongo:
    image: mongo:latest
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}  
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    env_file:
      - .env
    volumes:
      - mongo_data:/data/db
    expose:
      - "27017"
    ports:
      - "27017:27017"
    networks:
      - dotnet-lab-network

  # Redis
  redis:
    image: redis:alpine
    container_name: redis
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD} 
    env_file:
      - .env
    expose:
      - "6379"
    ports:
      - "6379:6379"
    networks:
      - dotnet-lab-network

  # Nginx
  nginx:
    image: nginx:stable-alpine
    container_name: m-arkhipenka-nginx
    restart: always
    environment:
      APP_HOST: ${APP_HOST}
      APP_PORT: ${APP_PORT}
      SERVER_NAME_NGINX: ${SERVER_NAME_NGINX}
    env_file:
      - .env
    depends_on:
      - m-arkhipenka-api
    ports:
      - ${EXPOSE_NGINX_PORT}:80
      - ${SSL_NGINX_PORT}:443
    volumes:
      - ./nginx/nginx-config:/etc/nginx/templates # NGINX Template
      - ./nginx/certs:/etc/nginx/certs # SSL certs
      - ./logs/nginx:/var/log/nginx # Logs
      - ./app:/app
    networks:
      - dotnet-lab-network

volumes:
  postgres_data:
  mongo_data:
  
networks:
  dotnet-lab-network:
    external: true
    driver: bridge