services:

  # PostgreSQL
  postgres:
    image: postgres:alpine
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}  
      POSTGRES_DB: sonarqube
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d sonarqube"]
      interval: 10s
      timeout: 5s
      retries: 5
    expose:
      - "5432"
    ports:
      - "5432:5432" 
    networks:
      - dotnet-lab-network

  # MongoDB
  mongo:
    image: mongo:latest
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}  
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    env_file:
      - .env
    volumes:
      - mongo_data:/data/db
    expose:
      - "27017"
    ports:
      - "27017:27017" 
    networks:
      - dotnet-lab-network

  # Redis
  redis:
    image: redis:alpine
    container_name: redis
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD} 
    env_file:
      - .env
    expose:
      - "6379"
    ports:
      - "6379:6379" 
    networks:
      - dotnet-lab-network

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      device: /home/dot-net/projects/static-data/postgres
      o: bind
  mongo_data:
    driver: local
    driver_opts:
      type: none
      device: /home/dot-net/projects/static-data/mongo
      o: bind
  
networks:
  dotnet-lab-network:
    external: true
    driver: bridge